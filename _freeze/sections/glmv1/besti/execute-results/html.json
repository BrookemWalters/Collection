{
  "hash": "35e871f6741c37b0d99214b55872c59f",
  "result": {
    "markdown": "---\ntitle: \"best_item\"\n---\n\n\n\nImport Libraries\n\n\n::: {.cell}\n\n```{.r .cell-code}\nif (!require(\"pacman\")) {\n  install.packages(\"pacman\")\n  library(\"pacman\")\n}\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: pacman\n```\n:::\n\n```{.r .cell-code}\n# Use p_load() to install (if necessary) and load  packages\npacman::p_load(tidyverse,\n               tidymodels,\n               leaps,\n               corrplot,\n               MMWRweek) # for subset selection\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsetwd(\"~/gvsu/summer 23/stat 631/Collection/sections/glmv1\")\nai <-  read.csv(\"inventory.csv\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# total yearly sales for each item\ninventory_sum <- ai %>%\n  group_by(item_no) %>%\n  summarise(year_total = sum(sold), .groups = \"drop\")\n\n# Join this back to the original data frame\nai <- left_join(ai, inventory_sum, by = c(\"item_no\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate the top 10% threshold\ntop_10_threshold <- quantile(ai$year_total, 0.9)\n\n# Create the 'hv_product' column\nai <- ai %>% \n  mutate(best_seller = ifelse(year_total >= top_10_threshold, 1, 0))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nai$year <-  2023\nai <- ai %>%\n  mutate(MMWRyear = ifelse(week == 0, year - 1, ifelse(week == 53, year + 1, year)),\n         week = ifelse(week == 0, 52, ifelse(week == 53, 1, week)))\n\nai$date <- MMWRweek::MMWRweek2Date(ai$MMWRyear, ai$week)\nai$month <- month(ai$date, label = TRUE)\nai$month <- month(ai$date)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nai <-  ai %>% \n  select(\"year\" = MMWRyear,\n         item_no,\n         month,\n         week,\n         best_seller,\n         sold)\n```\n:::\n\n\n\n\n\nhttps://www.youtube.com/watch?v=Kn3llTjYS5E\n\n::: {.cell}\n\n```{.r .cell-code}\nai <- ai %>%\n  mutate(lag1 = lag(sold, 1),\n         lag2 = lag(sold, 2))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nai <-  ai %>% \n  filter(item_no == \"A510004\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nai <- ai %>% \n  mutate(moving_avg_4weeks = zoo::rollmean(sold, k = 4, fill = NA, align = \"right\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nai <-  ai %>% \n  select(-item_no)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(3746)\n# forward Stepwise Selection\n# nvmax = 8 specifies the maximum number of predictors to incorporate in the model.\nai_mod <- regsubsets(sold ~  .,\n                       data = ai, nbest = 1, method = \"exhaustive\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in leaps.setup(x, y, wt = wt, nbest = nbest, nvmax = nvmax, force.in =\nforce.in, : 1 linear dependencies found\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\nReordering variables and trying again:\n```\n:::\n\n```{.r .cell-code}\nai_mod_summary_mx <- with(summary(ai_mod), data.frame(rsq,adjr2, cp, rss, outmat))\nai_mod_summary <- ai_mod_summary_mx %>% \n  select(rsq,adjr2, cp, rss)\n\n\nai_mod_summary\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n               rsq     adjr2        cp       rss\n1  ( 1 ) 0.1450253 0.1275769 28.840405 146883607\n2  ( 1 ) 0.3873576 0.3618308  9.344357 105251221\n3  ( 1 ) 0.4972487 0.4651582  1.596485  86372067\n4  ( 1 ) 0.4981877 0.4545519  3.513187  86210740\n5  ( 1 ) 0.4986518 0.4429465  5.472016  86131003\n6  ( 1 ) 0.5152464 0.4491436  6.000000  83280082\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrsq <- ai_mod_summary$rsq\n\nnum_predictors <- 1:length(rsq)\n\nai_mod_summary %>% \nggplot( aes(x = num_predictors, y = rsq)) +\n  geom_line() +\n  geom_point() +\n  scale_x_continuous(breaks = 1:9)\n```\n\n::: {.cell-output-display}\n![](besti_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmod1 <-  lm(sold~ year + month + week + lag1 + lag2 + moving_avg_4weeks, data = ai)\nsummary(mod1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = sold ~ year + month + week + lag1 + lag2 + moving_avg_4weeks, \n    data = ai)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-2550.69  -816.62    -3.24   681.07  3156.49 \n\nCoefficients:\n                    Estimate Std. Error t value Pr(>|t|)    \n(Intercept)       -2.243e+07  1.773e+07  -1.265 0.212476    \nyear               1.109e+04  8.764e+03   1.265 0.212474    \nmonth             -9.466e+02  7.638e+02  -1.239 0.221778    \nweek               2.175e+02  1.772e+02   1.227 0.226238    \nlag1              -3.685e-01  1.187e-01  -3.104 0.003329 ** \nlag2              -5.547e-01  1.297e-01  -4.276 0.000101 ***\nmoving_avg_4weeks  1.978e+00  3.320e-01   5.958 3.89e-07 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1376 on 44 degrees of freedom\n  (3 observations deleted due to missingness)\nMultiple R-squared:  0.5152,\tAdjusted R-squared:  0.4491 \nF-statistic: 7.795 on 6 and 44 DF,  p-value: 9.59e-06\n```\n:::\n\n```{.r .cell-code}\nmod1_aic <- AIC(mod1)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmod2 <-  lm(sold~ year + month + lag1 + lag2 + moving_avg_4weeks, data = ai)\nsummary(mod2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = sold ~ year + month + lag1 + lag2 + moving_avg_4weeks, \n    data = ai)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-2660.41  -796.23   -42.27   678.06  3121.75 \n\nCoefficients:\n                    Estimate Std. Error t value Pr(>|t|)    \n(Intercept)       -9.777e+05  2.982e+06  -0.328  0.74451    \nyear               4.834e+02  1.474e+03   0.328  0.74449    \nmonth             -1.195e+01  5.857e+01  -0.204  0.83919    \nlag1              -3.735e-01  1.193e-01  -3.132  0.00305 ** \nlag2              -6.205e-01  1.188e-01  -5.225 4.34e-06 ***\nmoving_avg_4weeks  1.990e+00  3.337e-01   5.964 3.53e-07 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1383 on 45 degrees of freedom\n  (3 observations deleted due to missingness)\nMultiple R-squared:  0.4987,\tAdjusted R-squared:  0.4429 \nF-statistic: 8.952 on 5 and 45 DF,  p-value: 5.85e-06\n```\n:::\n\n```{.r .cell-code}\nmod2_aic <- AIC(mod2)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmod3 <-  lm(sold~ year + lag1 + lag2 + moving_avg_4weeks, data = ai)\nsummary(mod3)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = sold ~ year + lag1 + lag2 + moving_avg_4weeks, data = ai)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-2666.08  -783.55   -12.54   682.31  3128.39 \n\nCoefficients:\n                    Estimate Std. Error t value Pr(>|t|)    \n(Intercept)       -8.448e+05  2.879e+06  -0.293  0.77055    \nyear               4.176e+02  1.423e+03   0.293  0.77054    \nlag1              -3.745e-01  1.179e-01  -3.176  0.00267 ** \nlag2              -6.202e-01  1.175e-01  -5.278 3.43e-06 ***\nmoving_avg_4weeks  1.989e+00  3.302e-01   6.025 2.65e-07 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1369 on 46 degrees of freedom\n  (3 observations deleted due to missingness)\nMultiple R-squared:  0.4982,\tAdjusted R-squared:  0.4546 \nF-statistic: 11.42 on 4 and 46 DF,  p-value: 1.614e-06\n```\n:::\n\n```{.r .cell-code}\nmod3_aic <- AIC(mod3)\n```\n:::\n\n# next up, how can u split the data without changing the weeks?\nI can split it up by inventory??\n\nadd back in the best sellers and compare AICs?\n",
    "supporting": [
      "besti_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}
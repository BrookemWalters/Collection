{
  "hash": "2b5769c3b055cc56838a15cb407ad322",
  "result": {
    "markdown": "---\ntitle: \"inventory prediction\"\nformat: \n  html:\n    code-fold: true\n---\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# import data\nsai <-  read.csv(\"inventory.csv\")\n```\n:::\n\n\nDRAFT DRAFT OUTLINE\n\n## Description of Data:\nThe initial inventory dataset contains 26,352 items sold over the course of 54 weeks\n(0-53)\n\n[insert histogram of items sold]\n\n\n## Limitations\n12 months of data is not great for this preserves the temporal order.\nA more robost dataset to work on would include a couple years of data\n\n## Statistical Summary:\n\nProvide a statistical summary of the variables. This includes measures of central tendency (mean, median, mode), dispersion (range, standard deviation, variance), and distribution properties (skewness, kurtosis). This could be supplemented with summary tables and histograms.\n\n\\[insert\\]\n\n## Visual Exploration:\n\nUse visualizations to give an overview of the data. Histograms, box plots, scatter plots, or correlation heatmaps can be used to show relationships and trends within the data..\n\n\\[insert\\]\n\n## Initial Insights:\n\nStart by providing a comprehensive summary of the dataset. This includes source information, timeframe, and the main purpose for collection. Each variable should be properly named and described. This could be presented in the form of a data dictionary.\n\n\\[insert\\]\n\n## Feature engineering\nI needed to create a few more variables help with the predictions:\n\n(link to data dictionary)\n\n-   totals for each item over the year\n-   which items are best selling? top ten items based on volume\n-   convert weeks to dates so we can extract the month\n-   lag period for seasonality\n-   rolling mean\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# total yearly sales for each item\ninventory_sum <- sai %>%\n  group_by(item_no) %>%\n  summarise(year_total = sum(sold), .groups = \"drop\")\n\nsai <- left_join(sai, inventory_sum, by = c(\"item_no\"))\n\n###\n# calculate the top 10% threshold\ntop_10_threshold <- quantile(sai$year_total, 0.9)\n\n# dummy variable for bestsellers 1= yes 0 = no\nsai <- sai %>%\n  mutate(best_seller = ifelse(year_total >= top_10_threshold, 1, 0))\n\n## figure out month an year for data, assuming the data is from  2022\n# week 0: December 27, 2021 - January 2, 2022\n# week 52: December 19, 2022 - December 25, 2022\n# week 53: December 26, 2022 - January 1, 2023\n\nsai$year <- 2022\n\nsai <- sai %>%\n  mutate(calendar_week = ifelse(week == 0, 52, ifelse(week == 53, 1, week)),\n         calendar_year = ifelse(week == 0, year - 1, ifelse(week == 53, year + 1, year)))\n\n# Now use calendar_year and calendar_week in the MMWRweek2Date function\nsai$date <- MMWRweek2Date(sai$calendar_year, sai$calendar_week)\n\n\n\n# find the year the week ends in, so we can figure out months\nsai <- sai %>%\n  mutate(wk_ending_year = ifelse(week %in% c(0, 53), year + 1, year),\n         week = ifelse(week == 53, 1, week))\n\n\n\n# create teh data and extract the month\n# wanted month to be quantitative to reduce model complexity\n\nsai$date <- MMWRweek2Date(sai$wk_ending_year, sai$calendar_week)\nsai$month <- month(sai$date, label = TRUE)\nsai$month <- month(sai$date)\n\n\n# create lag periods\n# https://www.youtube.com/watch?v=Kn3llTjYS5E\n\nsai <- sai %>%\n  mutate(lag1 = lag(sold, 1),\n         lag2 = lag(sold, 2))\n\n# https://www.rdocumentation.org/packages/zoo/versions/1.8-12/topics/rollmean\nsai <- sai %>%\n  group_by(item_no) %>%\n  mutate(rolling_4wk_avg = zoo::rollmean(sold, k = 4, fill = NA, align = \"right\")) %>%\n  ungroup()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(sai)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 14\n  item_no  week  sold year_total best_seller  year calendar_week calendar_year\n  <chr>   <dbl> <int>      <int>       <dbl> <dbl>         <dbl>         <dbl>\n1 020-307     0     0        880           0  2022            52          2021\n2 020-307     1    80        880           0  2022             1          2022\n3 020-307     2     0        880           0  2022             2          2022\n4 020-307     3     0        880           0  2022             3          2022\n5 020-307     4     0        880           0  2022             4          2022\n6 020-307     5     0        880           0  2022             5          2022\n# ℹ 6 more variables: date <date>, wk_ending_year <dbl>, month <dbl>,\n#   lag1 <int>, lag2 <int>, rolling_4wk_avg <dbl>\n```\n:::\n\n```{.r .cell-code}\ncolnames(sai)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"item_no\"         \"week\"            \"sold\"            \"year_total\"     \n [5] \"best_seller\"     \"year\"            \"calendar_week\"   \"calendar_year\"  \n [9] \"date\"            \"wk_ending_year\"  \"month\"           \"lag1\"           \n[13] \"lag2\"            \"rolling_4wk_avg\"\n```\n:::\n\n```{.r .cell-code}\n# validate data\nwrite.csv(sai, \"FEinventory.csv\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\na5i <-  sai %>% \n  filter(item_no == 'A510004') %>% \n  dplyr::select(\n    week,\n    month,\n    lag1,\n    lag2,\n    rolling_4wk_avg,\n    sold) #not sure why i had to include the dplyr package\n```\n:::\n\n\ncreate a model based on the best selling item, inventory with more items sold are more predcitable. \n\n## Model Selection\nfind the best model using stepwise selection find the 2 best methods for every size predictors\n\n- define generalized linear regression and why I chose this for the model\n- i removed the best sellers because all of the items were best sellers\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# https://youtu.be/IScjygOnO0w\nset.seed(3746)\n# forward Stepwise Selection\n# nvmax = 8 specifies the maximum number of predictors to incorporate in the model.\na5i_mod <- regsubsets(sold ~  .,\n                       data = a5i, nbest = 2, method = \"exhaustive\")\na5i_mod_summary_mx <- with(summary(a5i_mod), data.frame(rsq,adjr2, cp, rss, outmat))\n\na5i_mod_summary_mx$predictors_cnt <- c(1,1,2,2,3,3,4,4,5) # for graphing\na5i_mod_summary_mx$model <- c('a','b','a','b','a','b','a','b','a') # for graphing\na5i_mod_summary_mx$modeltype <-  \"lrm\"\n\n# insert the num_predictors column to a5i_mod_summary_mx\na5i_mod_summary_mx \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                rsq     adjr2        cp       rss week month lag1 lag2\n1  ( 1 ) 0.14502533 0.1275769 31.959462 146883607                     \n1  ( 2 ) 0.09746449 0.0790454 36.351847 155054501                    *\n2  ( 1 ) 0.38735758 0.3618308 11.579355 105251221                    *\n2  ( 2 ) 0.18497440 0.1510150 30.270046 140020406               *     \n3  ( 1 ) 0.49724866 0.4651582  3.430586  86372067               *    *\n3  ( 2 ) 0.38901570 0.3500167 13.426223 104966358          *         *\n4  ( 1 ) 0.49802651 0.4543766  5.358750  86238434          *    *    *\n4  ( 2 ) 0.49758788 0.4538999  5.399259  86313791    *          *    *\n5  ( 1 ) 0.51273908 0.4585990  6.000000  83710833    *     *    *    *\n         rolling_4wk_avg predictors_cnt model modeltype\n1  ( 1 )               *              1     a       lrm\n1  ( 2 )                              1     b       lrm\n2  ( 1 )               *              2     a       lrm\n2  ( 2 )               *              2     b       lrm\n3  ( 1 )               *              3     a       lrm\n3  ( 2 )               *              3     b       lrm\n4  ( 1 )               *              4     a       lrm\n4  ( 2 )               *              4     b       lrm\n5  ( 1 )               *              5     a       lrm\n```\n:::\n:::\n\n\n### model evaluation\n\n\n::: {.cell}\n\n```{.r .cell-code}\na5i_mod_summary_mx %>% \n  pivot_longer(c(adjr2, cp), names_to = \"metric\", values_to = \"value\") %>%\n  ggplot(aes(x = predictors_cnt, y = value, color = model)) +\n  geom_line(show.legend = F) +\n  geom_point() +\n  facet_wrap(~metric, scales = \"free\") +\n  scale_x_continuous(breaks = 1:5)\n```\n\n::: {.cell-output-display}\n![](pi3_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n# show the models in a table\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# create the table\n```\n:::\n\n\n\nexplain why this is the best one\nwhat do each of these things tell me?\n\n-   rsq -\\> highest r squared, explains the variability in the model\n-   adjr2 - \\> highest\n-   cp -\\> smallest\n-   rss -\\> smallest\n\nhaving trouble choosing, i spent a lot of time making my variables so lets look at AIC several models what is AIC? Lower AIC values indicate a better-fit model, and a model with a delta-AIC (the difference between the two AIC values being compared) of more than -2 is considered significantly better than the model it is being compared to\n\nfind the coefficients and (Akaike Information Criterion) AIC\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmod_compare <-  a5i_mod_summary_mx %>% \n  filter(model == \"a\",\n         predictors_cnt >2) %>% \n  dplyr:: select(predictors_cnt,\n          rsq,\n          adjr2,\n          cp,\n          rss)\n\n\n# best adjusted r squared 5 predictors \nmod5 <-  lm(sold~ month + week + lag1 + lag2 + rolling_4wk_avg , data = a5i)\nmod5_aic <- AIC(mod5)\n\n\n# mix of cp and adjusted r squared model a\nmod4 <-  lm(sold~ month + lag1 + lag2 + rolling_4wk_avg , data = a5i)\nmod4_aic <- AIC(mod4)\n\n# best cp model a\nmod3 <-  lm(sold~ lag1 + lag2 + rolling_4wk_avg , data = a5i)\nmod3_aic <- AIC(mod3)\n\n\nmod_compare$AIC <-  c(mod3_aic,mod4_aic, mod5_aic )\nmod_compare\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n         predictors_cnt       rsq     adjr2       cp      rss      AIC\n3  ( 1 )              3 0.4972487 0.4651582 3.430586 86372067 886.1915\n4  ( 1 )              4 0.4980265 0.4543766 5.358750 86238434 888.1126\n5  ( 1 )              5 0.5127391 0.4585990 6.000000 83710833 888.5954\n```\n:::\n:::\n\n\nhttps://emilhvitfeldt.github.io/ISLR-tidymodels-labs/04-classification.html\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntrain_index <- 1:(nrow(sai) - 12)\nsai_train <- sai[train_index, ]\nsai_test <- sai[-train_index, ]\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npois_spec <- poisson_reg() %>% \n  set_mode(\"regression\") %>% \n  set_engine(\"glm\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npois_rec_spec <- recipe(\n  sold~ lag1 + lag2 + rolling_4wk_avg + best_seller ,\n  data = sai,\n) %>% \n  step_dummy(all_nominal_predictors())\n```\n:::\n\n\n\nuse a group of items \n",
    "supporting": [
      "pi3_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}
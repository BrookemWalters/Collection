{
  "hash": "a3121108c66de7c423469bae7dac099f",
  "result": {
    "markdown": "---\ntitle: \"inventory prediction\"\nformat: \n  html:\n    code-fold: true\neditor: visual\n---\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# import data\nsai <-  read.csv(\"inventory.csv\")\n```\n:::\n\n\nDRAFT DRAFT OUTLINE\n\n## Clear Description of Data:\n\nStart by providing a comprehensive summary of the dataset. This includes source information, timeframe, and the main purpose for collection. Each variable should be properly named and described. This could be presented in the form of a data dictionary.\n\n\\[insert\\]\n\n## Statistical Summary:\n\nProvide a statistical summary of the variables. This includes measures of central tendency (mean, median, mode), dispersion (range, standard deviation, variance), and distribution properties (skewness, kurtosis). This could be supplemented with summary tables and histograms.\n\n\\[insert\\]\n\n## Visual Exploration:\n\nUse visualizations to give an overview of the data. Histograms, box plots, scatter plots, or correlation heatmaps can be used to show relationships and trends within the data..\n\n\\[insert\\]\n\n## Initial Insights:\n\nStart by providing a comprehensive summary of the dataset. This includes source information, timeframe, and the main purpose for collection. Each variable should be properly named and described. This could be presented in the form of a data dictionary.\n\n\\[insert\\]\n\n## Feature engineering\n\n(link to data dictionary)\n\n-   totals for each item over the year\n-   which items are best selling? top ten items based on volume\n-   convert weeks to dates so we can extract the month\n-   lag period for seasonality\n-   rolling mean\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# total yearly sales for each item\ninventory_sum <- sai %>%\n  group_by(item_no) %>%\n  summarise(year_total = sum(sold), .groups = \"drop\")\n\nsai <- left_join(sai, inventory_sum, by = c(\"item_no\"))\n\n###\n# calculate the top 10% threshold\ntop_10_threshold <- quantile(sai$year_total, 0.9)\n\n# dummy variable for bestsellers 1= yes 0 = no\nsai <- sai %>% \n  mutate(best_seller = ifelse(year_total >= top_10_threshold, 1, 0))\n\n### figure out month an year for data, assuming the data is from  2022\n#week 0: December 27, 2021 - January 2, 2022\n#week 52: December 19, 2022 - December 25, 2022\n#week 53: December 26, 2022 - January 1, 2023\n\nsai$year <- 2022\n# find the year the week ends in, so we can figure out months\nsai <- sai %>%\n  mutate(wk_ending_year = ifelse(week %in% c(0, 53), year + 1, year),\n         week = ifelse(week == 0, 52, ifelse(week == 53, 1, week)))\n\n\n# create teh data and extract the month\n# wanted month to be quantitative to reduce model complexity \n\nsai$date <- MMWRweek2Date(sai$wk_ending_year, sai$week)\nsai$month <- month(sai$date, label = TRUE)\nsai$month <- month(sai$date)\n\n\n# create lag periods\n# https://www.youtube.com/watch?v=Kn3llTjYS5E\n\nsai <- sai %>%\n  mutate(lag1 = lag(sold, 1),\n         lag2 = lag(sold, 2))\n\n# https://www.rdocumentation.org/packages/zoo/versions/1.8-12/topics/rollmean\nsai <- sai %>%\n  group_by(item_no) %>% \n  mutate(rolling_4wk_avg = zoo::rollmean(sold, k = 4, fill = NA, align = \"right\")) %>%\n  ungroup()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# validate data\nwrite.csv(sai, \"FEinventory.csv\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\na5i <-  sai %>% \n  filter(item_no == 'A510004') %>% \n  dplyr::select(\n    week,\n    month,\n    lag1,\n    lag2,\n    rolling_4wk_avg,\n    sold) #not sure why i had to include the dplyr package\n```\n:::\n\n\ncreate a model based on the best selling item for reasons XYZ\n\n## Model Selection\n\nfind the best model using stepwise selection find the 2 best methods for every size predictors\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# https://youtu.be/IScjygOnO0w\nset.seed(3746)\n# forward Stepwise Selection\n# nvmax = 8 specifies the maximum number of predictors to incorporate in the model.\na5i_mod <- regsubsets(sold ~  .,\n                       data = a5i, nbest = 2, method = \"exhaustive\")\na5i_mod_summary_mx <- with(summary(a5i_mod), data.frame(rsq,adjr2, cp, rss, outmat))\n\na5i_mod_summary_mx$predictors_cnt <- c(1,1,2,2,3,3,4,4,5) # for graphing\na5i_mod_summary_mx$model <- c('a','b','a','b','a','b','a','b','a') # for graphing\na5i_mod_summary_mx$modeltype <-  \"lrm\"\n\n# insert the num_predictors column to a5i_mod_summary_mx\na5i_mod_summary_mx \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                rsq     adjr2        cp       rss week month lag1 lag2\n1  ( 1 ) 0.14502533 0.1275769 31.959462 146883607                     \n1  ( 2 ) 0.09746449 0.0790454 36.351847 155054501                    *\n2  ( 1 ) 0.38735758 0.3618308 11.579355 105251221                    *\n2  ( 2 ) 0.18497440 0.1510150 30.270046 140020406               *     \n3  ( 1 ) 0.49724866 0.4651582  3.430586  86372067               *    *\n3  ( 2 ) 0.38901570 0.3500167 13.426223 104966358          *         *\n4  ( 1 ) 0.49802651 0.4543766  5.358750  86238434          *    *    *\n4  ( 2 ) 0.49758788 0.4538999  5.399259  86313791    *          *    *\n5  ( 1 ) 0.51273908 0.4585990  6.000000  83710833    *     *    *    *\n         rolling_4wk_avg predictors_cnt model modeltype\n1  ( 1 )               *              1     a       lrm\n1  ( 2 )                              1     b       lrm\n2  ( 1 )               *              2     a       lrm\n2  ( 2 )               *              2     b       lrm\n3  ( 1 )               *              3     a       lrm\n3  ( 2 )               *              3     b       lrm\n4  ( 1 )               *              4     a       lrm\n4  ( 2 )               *              4     b       lrm\n5  ( 1 )               *              5     a       lrm\n```\n:::\n:::\n\n\n### model evaluation\n\n\n::: {.cell}\n\n```{.r .cell-code}\na5i_mod_summary_mx %>% \n  pivot_longer(c(adjr2, cp), names_to = \"metric\", values_to = \"value\") %>%\n  ggplot(aes(x = predictors_cnt, y = value, color = model)) +\n  geom_line(show.legend = F) +\n  geom_point() +\n  facet_wrap(~metric, scales = \"free\") +\n  scale_x_continuous(breaks = 1:5)\n```\n\n::: {.cell-output-display}\n![](pi2_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n# show the models in a table\n\nexplain why this is the best one\n\nwhat do each of these things tell me?\n\n-   rsq -\\> highest r squared\n\n-   adjr2 - \\> highest\n\n-   cp -\\> smallest\n\n-   rss -\\> smallest\n\nhaving trouble choosing, i spent a lot of time making my variables so lets look at AIC several models what is AIC? Lower AIC values indicate a better-fit model, and a model with a delta-AIC (the difference between the two AIC values being compared) of more than -2 is considered significantly better than the model it is being compared to\n\nfind the coefficients and (Akaike Information Criterion) AIC\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmod_compare <-  a5i_mod_summary_mx %>% \n  filter(model == \"a\",\n         predictors_cnt >2) %>% \n  dplyr:: select(predictors_cnt,\n          rsq,\n          adjr2,\n          cp,\n          rss)\n\n\n# best adjusted r squared 5 predictors \nmod5 <-  lm(sold~ month + week + lag1 + lag2 + rolling_4wk_avg , data = a5i)\nmod5_aic <- AIC(mod5)\n\n\n# mix of cp and adjusted r squared model a\nmod4 <-  lm(sold~ month + lag1 + lag2 + rolling_4wk_avg , data = a5i)\nmod4_aic <- AIC(mod4)\n\n# best cp model a\nmod3 <-  lm(sold~ lag1 + lag2 + rolling_4wk_avg , data = a5i)\nmod3_aic <- AIC(mod3)\n\n\nmod_compare$AIC <-  c(mod3_aic,mod4_aic, mod5_aic )\nmod_compare\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n         predictors_cnt       rsq     adjr2       cp      rss      AIC\n3  ( 1 )              3 0.4972487 0.4651582 3.430586 86372067 886.1915\n4  ( 1 )              4 0.4980265 0.4543766 5.358750 86238434 888.1126\n5  ( 1 )              5 0.5127391 0.4585990 6.000000 83710833 888.5954\n```\n:::\n:::\n\n\nshow the aic comparisons model 3 is the best, which makes the most sense since the other variables were not significant lag 1 and 2 are the best along with rolling monthly average\n\n\n\n\nCall:  glm(formula = sold ~  lag1 + lag2 + rolling_4wk_avg, \n    family = poisson, data = a5i)\n\n\n\n\n# next up, how can u split the data without changing the weeks?\n\nI can split it up by inventory??\nhttps://www.youtube.com/watch?v=-bCelif-ENY\n\nTime Series\nTraining\n\nTest\n\n",
    "supporting": [
      "pi2_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}